name: C++ CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ${{ matrix.os }} 

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]  
        build_type: [Release] 

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1
        with:
          cmake-version: '3.28.1'

      - name: Install GTest
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            sudo apt-get update
            sudo apt-get install -y libgtest-dev
            cd /usr/src/gtest
            sudo cmake .
            sudo make
            sudo cp *.a /usr/lib
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            # For Windows, use vcpkg to install GTest
            git clone https://github.com/microsoft/vcpkg.git
            cd vcpkg
            ./bootstrap-vcpkg.sh
            ./vcpkg install gtest
            ./vcpkg integrate install
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            # For macOS, use Homebrew to install GTest
            brew install googletest
            # Make sure to link the libraries
            cd /usr/local/Cellar/googletest
            mkdir build
            cd build
            cmake ..
            make
            sudo make install
          fi

      - name: Build the project
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ..
          make

      - name: Run tests
        run: |
          cd build
          ctest --output-on-failure
